<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'nelmio_alice.fixture_builder.denormalizer.flag_parser.registry' shared service.

return $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.registry'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\FlagParserRegistry(array(0 => ($this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator'] ?? $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ConfiguratorFlagParser()), 1 => ($this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend'] ?? $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ExtendFlagParser()), 2 => ($this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional'] ?? $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\OptionalFlagParser()), 3 => ($this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template'] ?? $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\TemplateFlagParser()), 4 => ($this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique'] ?? $this->privates['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\UniqueFlagParser())));
