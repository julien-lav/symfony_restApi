<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'debug.argument_resolver.service' shared service.

return $this->privates['debug.argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Controller\\ArticlesController::postArticlesAction' => function () {
    return ($this->privates['.service_locator.zv3hrPg'] ?? $this->load('get_ServiceLocator_Zv3hrPgService.php'));
}, 'App\\Controller\\ArticlesController::setViewHandler' => function () {
    return ($this->privates['.service_locator.0igcDxJ'] ?? $this->load('get_ServiceLocator_0igcDxJService.php'));
}, 'App\\Controller\\UsersController::postUsersAction' => function () {
    return ($this->privates['.service_locator.iuuVGtK'] ?? $this->load('get_ServiceLocator_IuuVGtKService.php'));
}, 'App\\Controller\\UsersController::setViewHandler' => function () {
    return ($this->privates['.service_locator.0igcDxJ'] ?? $this->load('get_ServiceLocator_0igcDxJService.php'));
}, 'App\\Controller\\ArticlesController:postArticlesAction' => function () {
    return ($this->privates['.service_locator.zv3hrPg'] ?? $this->load('get_ServiceLocator_Zv3hrPgService.php'));
}, 'App\\Controller\\ArticlesController:setViewHandler' => function () {
    return ($this->privates['.service_locator.0igcDxJ'] ?? $this->load('get_ServiceLocator_0igcDxJService.php'));
}, 'App\\Controller\\UsersController:postUsersAction' => function () {
    return ($this->privates['.service_locator.iuuVGtK'] ?? $this->load('get_ServiceLocator_IuuVGtKService.php'));
}, 'App\\Controller\\UsersController:setViewHandler' => function () {
    return ($this->privates['.service_locator.0igcDxJ'] ?? $this->load('get_ServiceLocator_0igcDxJService.php'));
}))), ($this->privates['debug.stopwatch'] ?? $this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)));
