<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ($this->services['kernel'] ?? $this->get('kernel', 1));
$b = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
$c = ($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($a));

$d = new \Symfony\Component\HttpKernel\Config\FileLocator($a, '/app/src/Resources', array(0 => '/app/src'));

$e = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();

$f = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($b);

$g = new \Symfony\Component\Config\Loader\LoaderResolver();
$g->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($d));
$g->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($d));
$g->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($d));
$g->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($d));
$g->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($d));
$g->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($d, $e));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $d, $c, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($b, ($this->privates['fos_rest.request.param_fetcher.reader'] ?? $this->getFosRest_Request_ParamFetcher_ReaderService()), new \FOS\RestBundle\Inflector\DoctrineInflector(), true, array('json' => false, 'xml' => false, 'html' => true), true), $b), 'json'));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($d, $e, true, array('json' => false, 'xml' => false, 'html' => true), 'json'));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($d, $e, true, array('json' => false, 'xml' => false, 'html' => true), 'json'));
$g->addLoader($f);
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($d, $f));
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($d, $f));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($c, $g);
